type CatalogoD{
	id: ID!
	processDate: String
	relCatId: String
	fullDesc: String
	shortDesc: String
	screenDesc: String
	abbreviation: String
}

type Archivo{
	id: ID!
	nombre: String!
	fechaCarga: String!
}

type CatalogoT{
	processDate: ID!
	hora: String!
	moneda: String
	precio: String
	siefore: String
	valor: String
	col2: String
	col3: String
	col4: String
	col5: String
	col6: String
	col7: String
	col8: String
	col9: String
	cveIva: String
	tasaIva: String
	ISR: String
	indice: String
	region: String
	plazo: Int
	t_bruta: String
	lim_inf: String
	lim_sup: String
	divMet: String
	denomin: String
	venta: String
	cveTc: String
	compra: String
	diario: String
	mensual: String
	anual: String
}

type Query {
	cargarArchivos: [Archivo]
	findArchivoById(idArchivo: ID): Archivo
	findAllArchivo(limit: Int): [Archivo]
	findCatalogoTById(idCatalogoT: ID): CatalogoT
	findAllCatalogoT(limit: Int): [CatalogoT]
	findCatalogoTByFilter(filter: String!,separator:String): [CatalogoT]
	findCatalogoDById(idCuenta: ID): CatalogoD
	findAllCatalogoD(limit: Int): [CatalogoD]
	findCatalogoDByFilter(filter: String!,separator:String): [CatalogoD]
}
